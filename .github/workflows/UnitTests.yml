# This is a basic workflow to help you get started with Actions

name: UnitTest

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "develop" branch
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    # This workflow contains a single job called "build"
    UnitTests:
      # The type of runner that the job will run on
      runs-on: ubuntu-latest
      # Steps represent a sequence of tasks that will be executed as part of the job
      steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install needed modules
        shell: pwsh
        run: |
          Set-PSRepository PSGallery -InstallationPolicy Trusted
          Install-Module PSScriptAnalyzer -ErrorAction Stop
          Install-Module Pester -ErrorAction Stop
      - name: Importing PSCloudPC module
        shell: pwsh
        run: |
          Import-Module ./PSCloudPC/PSCloudPC.psd1 -Force -ErrorAction Stop
      - name: PSSA check
        shell: pwsh
        run: |
          Invoke-ScriptAnalyzer -Path ./PSCloudPC/Public/*.ps1 -Recurse -ExcludeRule PSAvoidTrailingWhitespace -Outvariable issues
          $errors   = $issues.Where({$_.Severity -eq 'Error'})
          $warnings = $issues.Where({$_.Severity -eq 'Warning'})
          if ($errors) {
              Write-Error "There were $($errors.Count) errors and $($warnings.Count) warnings total." -ErrorAction Stop
          } else {
              Write-Output "There were $($errors.Count) errors and $($warnings.Count) warnings total."
          }
      - name: Pester Module check
        shell: pwsh
        run: |
          $testLocation = (Join-Path -Path "./Compiler" -ChildPath "Module.tests.ps1")
          Invoke-Pester -Path $testLocation -Output detailed
      - name: Pester Functions check
        shell: pwsh
        run: |
          Import-Module ./PSCloudPC/PSCloudPC.psd1 -Force -ErrorAction Stop
          Invoke-Pester -Path (Join-Path -Path "./Compiler" -ChildPath "Functions.tests.ps1") -Output detailed
      - name: Pester Files check
        shell: pwsh
        run: |
          Import-Module ./PSCloudPC/PSCloudPC.psd1 -Force -ErrorAction Stop
          Invoke-Pester -Path (Join-Path -Path "./Compiler" -ChildPath "Files.tests.ps1") -Output detailed